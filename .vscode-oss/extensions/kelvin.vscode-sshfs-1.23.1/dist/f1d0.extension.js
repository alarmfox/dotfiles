"use strict";exports.id="f1d0",exports.ids=["f1d0"],exports.modules={1845:(e,t,i)=>{i.r(t),i.d(t,{SSHFileSystem:()=>a});var r=i(5622),n=i(7549),s=i(9425);const o=(0,s.RS)(1,{...s._$,maxErrorStack:4}),h=["/.vscode","/.vscode/","/.git/","/node_modules","/pom.xml","/app/src/main/AndroidManifest.xml"];class a{constructor(e,t,i){this.authority=e,this.sftp=t,this.config=i,this.onCloseEmitter=new n.EventEmitter,this.onDidChangeFileEmitter=new n.EventEmitter,this.waitForContinue=!1,this.closed=!1,this.closing=!1,this.copy=void 0,this.onClose=this.onCloseEmitter.event,this.onDidChangeFile=this.onDidChangeFileEmitter.event,this.logging=s.zW.scope(`SSHFileSystem(${e})`,!1),this.sftp.on("end",(()=>(this.closed=!0,this.onCloseEmitter.fire()))),this.logging.info("SSHFileSystem created")}disconnect(){this.closing=!0,this.sftp.end()}continuePromise(e){return new Promise(((t,i)=>{const r=()=>{if(this.waitForContinue=!1,this.closed)return i(new Error("Connection closed"));try{e(((e,r)=>e?i(e):t(r)))||(this.waitForContinue=!0)}catch(e){i(e)}};this.waitForContinue?this.sftp.once("continue",r):r()}))}watch(e,t){return new n.Disposable((()=>{}))}async stat(e){const t=await this.continuePromise((t=>this.sftp.stat(e.path,t))).catch((t=>this.handleError(e,t,!0))),{mtime:i,size:r}=t;let s=n.FileType.Unknown;return t.isFile()&&(s|=n.FileType.File),t.isDirectory()&&(s|=n.FileType.Directory),t.isSymbolicLink()&&(s|=n.FileType.SymbolicLink),{type:s,mtime:i,size:r,ctime:0}}async readDirectory(e){const t=await this.continuePromise((t=>this.sftp.readdir(e.path,t))).catch((t=>this.handleError(e,t,!0)));return Promise.all(t.map((async t=>{const i=e.with({path:`${e.path}${e.path.endsWith("/")?"":"/"}${t.filename}`}),r=40960==(61440&t.attrs.mode)?n.FileType.SymbolicLink:0;try{const e=(await this.stat(i)).type;return[t.filename,e|r]}catch(e){return this.logging.warning.withOptions(s._$)`Error in readDirectory for ${i}: ${e}`,[t.filename,n.FileType.Unknown|r]}})))}createDirectory(e){return this.continuePromise((t=>this.sftp.mkdir(e.path,t))).catch((t=>this.handleError(e,t,!0)))}readFile(e){return new Promise(((t,i)=>{const r=this.sftp.createReadStream(e.path,{autoClose:!0}),n=[];r.on("data",n.push.bind(n)),r.on("error",(t=>this.handleError(e,t,i))),r.on("close",(()=>{t(new Uint8Array(Buffer.concat(n)))}))}))}writeFile(e,t,i){return new Promise((async(i,r)=>{let s,o=!1;try{s=(await this.continuePromise((t=>this.sftp.stat(e.path,t)))).mode,o=!0}catch(t){"No such file"===t.message?s=this.config.newFileMode:(this.handleError(e,t),n.window.showWarningMessage(`Couldn't read the permissions for '${e.path}', permissions might be overwritten`))}s=s;const h=this.sftp.createWriteStream(e.path,{mode:s,flags:"w"});h.on("error",(t=>this.handleError(e,t,r))),h.end(t,(()=>{this.onDidChangeFileEmitter.fire([{uri:e,type:o?n.FileChangeType.Changed:n.FileChangeType.Created}]),i()}))}))}async delete(e,t){const i=await this.stat(e),r=()=>this.onDidChangeFileEmitter.fire([{uri:e,type:n.FileChangeType.Deleted}]);return i.type&(n.FileType.SymbolicLink|n.FileType.File)?this.continuePromise((t=>this.sftp.unlink(e.path,t))).then(r).catch((t=>this.handleError(e,t,!0))):i.type&n.FileType.Directory&&t.recursive?this.continuePromise((t=>this.sftp.rmdir(e.path,t))).then(r).catch((t=>this.handleError(e,t,!0))):this.continuePromise((t=>this.sftp.unlink(e.path,t))).then(r).catch((t=>this.handleError(e,t,!0)))}rename(e,t,i){return this.continuePromise((i=>this.sftp.rename(e.path,t.path,i))).then((()=>this.onDidChangeFileEmitter.fire([{uri:e,type:n.FileChangeType.Deleted},{uri:t,type:n.FileChangeType.Created}]))).catch((e=>this.handleError(t,e,!0)))}handleError(e,t,i=!1){if(2===t.code&&function(e){if(h.some((t=>t===e||t.endsWith("/")&&e.startsWith(t))))return!0;for(const{uri:{path:t}}of n.workspace.workspaceFolders||[]){if(!e.startsWith(t))continue;let i=r.posix.relative(t,e);if(i.startsWith("/")||(i=`/${i}`),h.some((e=>e===i||e.endsWith("/")&&i.startsWith(e))))return!0}return!1}(e.path)){if(t=n.FileSystemError.FileNotFound(e),this.logging.debug(`Ignored FileNotFound error for: ${e}`,s.j7),!0===i)throw t;return i?i(t):void 0}if(s.zW.error.withOptions(o)`Error handling uri: ${e}\n${t}`,i&&"number"==typeof t.code){const i=t;2===t.code?t=n.FileSystemError.FileNotFound(e):3===t.code?t=n.FileSystemError.NoPermissions(e):(6===t.code||7===t.code)&&(t=n.FileSystemError.Unavailable(e)),t!==i&&s.zW.debug(`Error converted to: ${t}`)}if(!0===i)throw t;if(i)return i(t)}}}};
//# sourceMappingURL=f1d0.extension.js.map