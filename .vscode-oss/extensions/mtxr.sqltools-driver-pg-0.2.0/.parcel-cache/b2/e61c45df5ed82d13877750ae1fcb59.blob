var e=require("vscode").extensions;const s=[{displayName:"PostgreSQL",value:"PostgreSQL"},{displayName:"AWS Redshift",value:"AWS Redshift"}];var t;t=JSON.parse('{"name":"sqltools-driver-pg","displayName":"SQLTools PostgreSQL/Redshift Driver","description":"SQLTools PostgreSQL/Redshift Driver","version":"0.0.7","engines":{"vscode":"^1.42.0"},"publisher":"mtxr","license":"MIT","private":true,"repository":{"type":"git","url":"https://github.com/mtxr/vscode-sqltools.git","directory":"packages/drivers.pg"},"bugs":{"url":"https://github.com/mtxr/vscode-sqltools/labels/pg"},"keywords":["sqltools-driver","postgre","postgres","postgresql","redshift","aws redshift"],"galleryBanner":{"theme":"dark","color":"#333333"},"icon":"icon.png","categories":["Programming Languages","Snippets","Formatters","Other"],"extensionDependencies":["mtxr.sqltools"],"activationEvents":["*","onLanguage:sql","onCommand:sqltools.*"],"main":"./out/extension.js","ls":"./out/ls/plugin.js","targets":{"main":{"context":"electron-renderer","includeNodeModules":{"vscode":false},"engines":{"electron":">=6.x"},"outputFormat":"commonjs"},"ls":{"context":"node","includeNodeModules":true,"outputFormat":"commonjs","engines":{"node":">=10.x"}}},"optimizers":{"*.js":["@parcel/optimizer-terser"]},"alias":{"pg-native":"pg/lib/native"},"scripts":{"clean":"rimraf -rf out dist *.vsix","predev":"yarn run clean","dev":"concurrently -k \\"npm:watch:*\\"","prebuild":"yarn run clean && yarn run ts","build":"NODE_ENV=production concurrently \\"npm:build:*\\"","prepackage":"yarn run build","package":"vsce package --yarn -o .","build:ext":"NODE_PATH=../../ parcel build ./src/extension.ts --target main --dist-dir out --no-cache","build:ls":"NODE_PATH=../../ parcel build ./src/ls/plugin.ts --target ls --dist-dir out","watch:tsc":"yarn run ts -w --noEmit --preserveWatchOutput","watch:ext":"NODE_PATH=../../ parcel watch ./src/extension.ts --target main --dist-dir out --no-hmr --no-cache","watch:ls":"NODE_PATH=../../ parcel watch ./src/ls/plugin.ts --target ls --dist-dir out --no-hmr","ts":"tsc -p ."},"devDependencies":{"@parcel/optimizer-terser":"^2.0.0-alpha.3","@sqltools/base-driver":"latest","@types/lodash":"^4.14.123","@types/pg":"^7.14.3","@types/vscode":"^1.42.0","@types/webpack-env":"^1.15.2","concurrently":"^5.2.0","lodash":"^4.17.13","parcel":"2.0.0-beta.1","pg":"^8.2.1","rimraf":"^3.0.2","typescript":"^3.7.3","vsce":"1.77.0"}}');const{publisher:o,name:r}=t;exports.activate=async function(t){const n=e.getExtension("mtxr.sqltools");if(!n)throw new Error("SQLTools not installed");await n.activate();const a=n.exports,i=`${o}.${r}`,c={extensionId:i,name:"PostgreSQL/Redshift Plugin",type:"driver",async register(e){e.resourcesMap().set(`driver/${s[0].value}/icons`,{active:t.asAbsolutePath("icons/pg/active.png"),default:t.asAbsolutePath("icons/pg/default.png"),inactive:t.asAbsolutePath("icons/pg/inactive.png")}),e.resourcesMap().set(`driver/${s[1].value}/icons`,{active:t.asAbsolutePath("icons/redshift/active.png"),default:t.asAbsolutePath("icons/redshift/default.png"),inactive:t.asAbsolutePath("icons/redshift/inactive.png")}),s.forEach(({value:s})=>{e.resourcesMap().set(`driver/${s}/extension-id`,i),e.resourcesMap().set(`driver/${s}/connection-schema`,t.asAbsolutePath("connection.schema.json")),e.resourcesMap().set(`driver/${s}/ui-schema`,t.asAbsolutePath("ui.schema.json"))}),await e.client.sendRequest("ls/RegisterPlugin",{path:t.asAbsolutePath("out/ls/plugin.js")})}};return a.registerPlugin(c),{driverName:"PostgreSQL/Redshift",parseBeforeSaveConnection:({connInfo:e})=>{const s=["connectionMethod","id","usePassword"];return e.usePassword&&(e.usePassword.toString().toLowerCase().includes("ask")?s.push("password"):e.usePassword.toString().toLowerCase().includes("empty")?(e.password="",s.push("askForPassword")):e.usePassword.toString().toLowerCase().includes("save")&&s.push("askForPassword")),s.forEach(s=>delete e[s]),e},parseBeforeEditConnection:({connInfo:e})=>{const s={...e,connectionMethod:"Server and Port"};return e.socketPath?s.connectionMethod="Socket File":e.connectString&&(s.connectionMethod="Connection String"),e.askForPassword?(s.usePassword="Ask on connect",delete s.password):"string"==typeof e.password&&(delete s.askForPassword,s.usePassword=e.password?"Save password":"Use empty password"),s},driverAliases:s}},exports.deactivate=function(){};
//# sourceMappingURL=extension.js.map
