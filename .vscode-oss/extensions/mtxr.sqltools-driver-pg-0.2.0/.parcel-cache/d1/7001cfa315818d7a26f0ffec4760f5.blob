"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

/**
 * Handles placeholder replacement with given params.
 */
class Params {
  /**
   * @param {Object} params
   */
  constructor(params) {
    _defineProperty(this, "index", 0);

    this.params = params;
    this.params = params;
  }
  /**
   * Returns param value that matches given placeholder with param key.
   * @param {Token} token
   *   @param {string} token.key Placeholder key
   *   @param {string} token.value Placeholder value
   * @return {string} param or token.value when params are missing
   */


  get({
    key,
    value
  }) {
    if (!this.params) {
      return value;
    }

    if (key) {
      return this.params[key];
    }

    return this.params[this.index++];
  }

}

exports.default = Params;